{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatApolloErrors = exports.UserInputError = exports.PersistedQueryNotSupportedError = exports.PersistedQueryNotFoundError = exports.ForbiddenError = exports.AuthenticationError = exports.ValidationError = exports.SyntaxError = exports.fromGraphQLError = exports.toApolloError = exports.ApolloError = void 0;\nconst graphql_1 = require(\"graphql\");\nclass ApolloError extends Error {\n  constructor(message, code, extensions) {\n    super(message);\n    if (!this.name) {\n      Object.defineProperty(this, 'name', {\n        value: 'ApolloError'\n      });\n    }\n    if (extensions === null || extensions === void 0 ? void 0 : extensions.extensions) {\n      throw Error('Pass extensions directly as the third argument of the ApolloError constructor: `new ' + 'ApolloError(message, code, {myExt: value})`, not `new ApolloError(message, code, ' + '{extensions: {myExt: value}})`');\n    }\n    this.extensions = {\n      ...extensions,\n      code\n    };\n  }\n  toJSON() {\n    return (0, graphql_1.formatError)(toGraphQLError(this));\n  }\n  toString() {\n    return (0, graphql_1.printError)(toGraphQLError(this));\n  }\n  get [Symbol.toStringTag]() {\n    return this.name;\n  }\n}\nexports.ApolloError = ApolloError;\nfunction toGraphQLError(error) {\n  return new graphql_1.GraphQLError(error.message, error.nodes, error.source, error.positions, error.path, error.originalError, error.extensions);\n}\nfunction enrichError(error) {\n  let debug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var _a, _b, _c;\n  const expanded = Object.create(Object.getPrototypeOf(error), {\n    name: {\n      value: error.name\n    },\n    message: {\n      value: error.message,\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      value: error.locations || undefined,\n      enumerable: true\n    },\n    path: {\n      value: error.path || undefined,\n      enumerable: true\n    },\n    nodes: {\n      value: error.nodes || undefined\n    },\n    source: {\n      value: error.source || undefined\n    },\n    positions: {\n      value: error.positions || undefined\n    },\n    originalError: {\n      value: error.originalError\n    }\n  });\n  expanded.extensions = {\n    ...error.extensions,\n    code: ((_a = error.extensions) === null || _a === void 0 ? void 0 : _a.code) || 'INTERNAL_SERVER_ERROR',\n    exception: {\n      ...((_b = error.extensions) === null || _b === void 0 ? void 0 : _b.exception),\n      ...error.originalError\n    }\n  };\n  delete expanded.extensions.exception.extensions;\n  if (debug && !expanded.extensions.exception.stacktrace) {\n    const stack = ((_c = error.originalError) === null || _c === void 0 ? void 0 : _c.stack) || error.stack;\n    expanded.extensions.exception.stacktrace = stack === null || stack === void 0 ? void 0 : stack.split('\\n');\n  }\n  if (Object.keys(expanded.extensions.exception).length === 0) {\n    delete expanded.extensions.exception;\n  }\n  return expanded;\n}\nfunction toApolloError(error) {\n  let code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'INTERNAL_SERVER_ERROR';\n  let err = error;\n  if (err.extensions) {\n    err.extensions.code = code;\n  } else {\n    err.extensions = {\n      code\n    };\n  }\n  return err;\n}\nexports.toApolloError = toApolloError;\nfunction fromGraphQLError(error, options) {\n  const copy = (options === null || options === void 0 ? void 0 : options.errorClass) ? new options.errorClass(error.message) : new ApolloError(error.message);\n  Object.entries(error).forEach(_ref => {\n    let [key, value] = _ref;\n    if (key === 'extensions') {\n      return;\n    }\n    copy[key] = value;\n  });\n  copy.extensions = {\n    ...copy.extensions,\n    ...error.extensions\n  };\n  if (!copy.extensions.code) {\n    copy.extensions.code = (options === null || options === void 0 ? void 0 : options.code) || 'INTERNAL_SERVER_ERROR';\n  }\n  Object.defineProperty(copy, 'originalError', {\n    value: {}\n  });\n  Object.getOwnPropertyNames(error).forEach(key => {\n    Object.defineProperty(copy.originalError, key, {\n      value: error[key]\n    });\n  });\n  return copy;\n}\nexports.fromGraphQLError = fromGraphQLError;\nclass SyntaxError extends ApolloError {\n  constructor(message) {\n    super(message, 'GRAPHQL_PARSE_FAILED');\n    Object.defineProperty(this, 'name', {\n      value: 'SyntaxError'\n    });\n  }\n}\nexports.SyntaxError = SyntaxError;\nclass ValidationError extends ApolloError {\n  constructor(message) {\n    super(message, 'GRAPHQL_VALIDATION_FAILED');\n    Object.defineProperty(this, 'name', {\n      value: 'ValidationError'\n    });\n  }\n}\nexports.ValidationError = ValidationError;\nclass AuthenticationError extends ApolloError {\n  constructor(message, extensions) {\n    super(message, 'UNAUTHENTICATED', extensions);\n    Object.defineProperty(this, 'name', {\n      value: 'AuthenticationError'\n    });\n  }\n}\nexports.AuthenticationError = AuthenticationError;\nclass ForbiddenError extends ApolloError {\n  constructor(message, extensions) {\n    super(message, 'FORBIDDEN', extensions);\n    Object.defineProperty(this, 'name', {\n      value: 'ForbiddenError'\n    });\n  }\n}\nexports.ForbiddenError = ForbiddenError;\nclass PersistedQueryNotFoundError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotFound', 'PERSISTED_QUERY_NOT_FOUND');\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotFoundError'\n    });\n  }\n}\nexports.PersistedQueryNotFoundError = PersistedQueryNotFoundError;\nclass PersistedQueryNotSupportedError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotSupported', 'PERSISTED_QUERY_NOT_SUPPORTED');\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotSupportedError'\n    });\n  }\n}\nexports.PersistedQueryNotSupportedError = PersistedQueryNotSupportedError;\nclass UserInputError extends ApolloError {\n  constructor(message, extensions) {\n    super(message, 'BAD_USER_INPUT', extensions);\n    Object.defineProperty(this, 'name', {\n      value: 'UserInputError'\n    });\n  }\n}\nexports.UserInputError = UserInputError;\nfunction formatApolloErrors(errors, options) {\n  if (!options) {\n    return errors.map(error => enrichError(error));\n  }\n  const {\n    formatter,\n    debug\n  } = options;\n  const enrichedErrors = errors.map(error => enrichError(error, debug));\n  const makePrintable = error => {\n    if (error instanceof Error) {\n      const graphQLError = error;\n      return {\n        message: graphQLError.message,\n        ...(graphQLError.locations && {\n          locations: graphQLError.locations\n        }),\n        ...(graphQLError.path && {\n          path: graphQLError.path\n        }),\n        ...(graphQLError.extensions && {\n          extensions: graphQLError.extensions\n        })\n      };\n    }\n    return error;\n  };\n  if (!formatter) {\n    return enrichedErrors;\n  }\n  return enrichedErrors.map(error => {\n    try {\n      return makePrintable(formatter(error));\n    } catch (err) {\n      if (debug) {\n        return enrichError(err, debug);\n      } else {\n        const newError = fromGraphQLError(new graphql_1.GraphQLError('Internal server error'));\n        return enrichError(newError, debug);\n      }\n    }\n  });\n}\nexports.formatApolloErrors = formatApolloErrors;","map":{"version":3,"names":["graphql_1","require","ApolloError","Error","constructor","message","code","extensions","name","Object","defineProperty","value","toJSON","formatError","toGraphQLError","toString","printError","Symbol","toStringTag","exports","error","GraphQLError","nodes","source","positions","path","originalError","enrichError","debug","arguments","length","undefined","expanded","create","getPrototypeOf","enumerable","writable","locations","_a","exception","_b","stacktrace","stack","_c","split","keys","toApolloError","err","fromGraphQLError","options","copy","errorClass","entries","forEach","_ref","key","getOwnPropertyNames","SyntaxError","ValidationError","AuthenticationError","ForbiddenError","PersistedQueryNotFoundError","PersistedQueryNotSupportedError","UserInputError","formatApolloErrors","errors","map","formatter","enrichedErrors","makePrintable","graphQLError","newError"],"sources":["/Users/chadward/node_modules/apollo-server-errors/src/index.ts"],"sourcesContent":["import {\n  ASTNode,\n  GraphQLError,\n  GraphQLFormattedError,\n  Source,\n  SourceLocation,\n  printError,\n  formatError,\n} from 'graphql';\n\ndeclare module 'graphql' {\n  export interface GraphQLErrorExtensions {\n    exception?: {\n      code?: string;\n      stacktrace?: ReadonlyArray<string>;\n    };\n  }\n}\n\n// Note: We'd like to switch to `extends GraphQLError` and look forward to doing so\n// as soon as we drop support for `graphql` bellow `v15.7.0`.\nexport class ApolloError extends Error implements GraphQLError {\n  public extensions: Record<string, any>;\n  override readonly name!: string;\n  readonly locations: ReadonlyArray<SourceLocation> | undefined;\n  readonly path: ReadonlyArray<string | number> | undefined;\n  readonly source: Source | undefined;\n  readonly positions: ReadonlyArray<number> | undefined;\n  readonly nodes: ReadonlyArray<ASTNode> | undefined;\n  public originalError: Error | undefined;\n\n  [key: string]: any;\n\n  constructor(\n    message: string,\n    code?: string,\n    extensions?: Record<string, any>,\n  ) {\n    super(message);\n\n    // if no name provided, use the default. defineProperty ensures that it stays non-enumerable\n    if (!this.name) {\n      Object.defineProperty(this, 'name', { value: 'ApolloError' });\n    }\n\n    if (extensions?.extensions) {\n      throw Error(\n        'Pass extensions directly as the third argument of the ApolloError constructor: `new ' +\n          'ApolloError(message, code, {myExt: value})`, not `new ApolloError(message, code, ' +\n          '{extensions: {myExt: value}})`',\n      );\n    }\n\n    this.extensions = { ...extensions, code };\n  }\n\n  toJSON(): GraphQLFormattedError {\n    return formatError(toGraphQLError(this));\n  }\n\n  override toString(): string {\n    return printError(toGraphQLError(this));\n  }\n\n  get [Symbol.toStringTag](): string {\n    return this.name;\n  }\n}\n\nfunction toGraphQLError(error: ApolloError): GraphQLError {\n  return new GraphQLError(\n    error.message,\n    error.nodes,\n    error.source,\n    error.positions,\n    error.path,\n    error.originalError,\n    error.extensions,\n  );\n}\n\nfunction enrichError(error: Partial<GraphQLError>, debug: boolean = false) {\n  // follows similar structure to https://github.com/graphql/graphql-js/blob/main/src/error/GraphQLError.ts#L127-L176\n  // with the addition of name\n  const expanded = Object.create(Object.getPrototypeOf(error), {\n    name: {\n      value: error.name,\n    },\n    message: {\n      value: error.message,\n      enumerable: true,\n      writable: true,\n    },\n    locations: {\n      value: error.locations || undefined,\n      enumerable: true,\n    },\n    path: {\n      value: error.path || undefined,\n      enumerable: true,\n    },\n    nodes: {\n      value: error.nodes || undefined,\n    },\n    source: {\n      value: error.source || undefined,\n    },\n    positions: {\n      value: error.positions || undefined,\n    },\n    originalError: {\n      value: error.originalError,\n    },\n  });\n\n  expanded.extensions = {\n    ...error.extensions,\n    code: error.extensions?.code || 'INTERNAL_SERVER_ERROR',\n    exception: {\n      ...error.extensions?.exception,\n      ...(error.originalError as any),\n    },\n  };\n\n  // ensure that extensions is not taken from the originalError\n  // graphql-js ensures that the originalError's extensions are hoisted\n  // https://github.com/graphql/graphql-js/blob/0bb47b2/src/error/GraphQLError.js#L138\n  delete expanded.extensions.exception.extensions;\n  if (debug && !expanded.extensions.exception.stacktrace) {\n    const stack = error.originalError?.stack || error.stack;\n    expanded.extensions.exception.stacktrace = stack?.split('\\n');\n  }\n\n  if (Object.keys(expanded.extensions.exception).length === 0) {\n    // remove from printing an empty object\n    delete expanded.extensions.exception;\n  }\n\n  return expanded as ApolloError;\n}\n\nexport function toApolloError(\n  error: Error & { extensions?: Record<string, any> },\n  code: string = 'INTERNAL_SERVER_ERROR',\n): Error & { extensions: Record<string, any> } {\n  let err = error;\n  if (err.extensions) {\n    err.extensions.code = code;\n  } else {\n    err.extensions = { code };\n  }\n  return err as Error & { extensions: Record<string, any> };\n}\n\nexport interface ErrorOptions {\n  code?: string;\n  // This declaration means it takes any \"class\" that has a constructor that\n  // takes a single string, and should be invoked via the `new` operator.\n  errorClass?: new (message: string) => ApolloError;\n}\n\nexport function fromGraphQLError(error: GraphQLError, options?: ErrorOptions) {\n  const copy: ApolloError = options?.errorClass\n    ? new options.errorClass(error.message)\n    : new ApolloError(error.message);\n\n  // copy enumerable keys\n  Object.entries(error).forEach(([key, value]) => {\n    if (key === 'extensions') {\n      return; // extensions are handled bellow\n    }\n    copy[key] = value;\n  });\n\n  // merge extensions instead of just copying them\n  copy.extensions = {\n    ...copy.extensions,\n    ...error.extensions,\n  };\n\n  // Fallback on default for code\n  if (!copy.extensions.code) {\n    copy.extensions.code = options?.code || 'INTERNAL_SERVER_ERROR';\n  }\n\n  // copy the original error, while keeping all values non-enumerable, so they\n  // are not printed unless directly referenced\n  Object.defineProperty(copy, 'originalError', { value: {} });\n  Object.getOwnPropertyNames(error).forEach((key) => {\n    Object.defineProperty(copy.originalError, key, {\n      value: (error as any)[key],\n    });\n  });\n\n  return copy;\n}\n\nexport class SyntaxError extends ApolloError {\n  constructor(message: string) {\n    super(message, 'GRAPHQL_PARSE_FAILED');\n\n    Object.defineProperty(this, 'name', { value: 'SyntaxError' });\n  }\n}\n\nexport class ValidationError extends ApolloError {\n  constructor(message: string) {\n    super(message, 'GRAPHQL_VALIDATION_FAILED');\n\n    Object.defineProperty(this, 'name', { value: 'ValidationError' });\n  }\n}\n\nexport class AuthenticationError extends ApolloError {\n  constructor(message: string, extensions?: Record<string, any>) {\n    super(message, 'UNAUTHENTICATED', extensions);\n\n    Object.defineProperty(this, 'name', { value: 'AuthenticationError' });\n  }\n}\n\nexport class ForbiddenError extends ApolloError {\n  constructor(message: string, extensions?: Record<string, any>) {\n    super(message, 'FORBIDDEN', extensions);\n\n    Object.defineProperty(this, 'name', { value: 'ForbiddenError' });\n  }\n}\n\nexport class PersistedQueryNotFoundError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotFound', 'PERSISTED_QUERY_NOT_FOUND');\n\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotFoundError',\n    });\n  }\n}\n\nexport class PersistedQueryNotSupportedError extends ApolloError {\n  constructor() {\n    super('PersistedQueryNotSupported', 'PERSISTED_QUERY_NOT_SUPPORTED');\n\n    Object.defineProperty(this, 'name', {\n      value: 'PersistedQueryNotSupportedError',\n    });\n  }\n}\n\nexport class UserInputError extends ApolloError {\n  constructor(message: string, extensions?: Record<string, any>) {\n    super(message, 'BAD_USER_INPUT', extensions);\n\n    Object.defineProperty(this, 'name', { value: 'UserInputError' });\n  }\n}\n\nexport function formatApolloErrors(\n  errors: ReadonlyArray<Error>,\n  options?: {\n    formatter?: (error: GraphQLError) => GraphQLFormattedError;\n    debug?: boolean;\n  },\n): Array<ApolloError> {\n  if (!options) {\n    return errors.map((error) => enrichError(error));\n  }\n  const { formatter, debug } = options;\n\n  // Errors that occur in graphql-tools can contain an errors array that contains the errors thrown in a merged schema\n  // https://github.com/apollographql/graphql-tools/blob/3d53986ca/src/stitching/errors.ts#L104-L107\n  //\n  // They are are wrapped in an extra GraphQL error\n  // https://github.com/apollographql/graphql-tools/blob/3d53986ca/src/stitching/errors.ts#L109-L113\n  // which calls:\n  // https://github.com/graphql/graphql-js/blob/0a30b62964/src/error/locatedError.js#L18-L37\n  // Some processing for these nested errors could be done here:\n  //\n  // if (Array.isArray((error as any).errors)) {\n  //   (error as any).errors.forEach(e => flattenedErrors.push(e));\n  // } else if (\n  //   (error as any).originalError &&\n  //   Array.isArray((error as any).originalError.errors)\n  // ) {\n  //   (error as any).originalError.errors.forEach(e => flattenedErrors.push(e));\n  // } else {\n  //   flattenedErrors.push(error);\n  // }\n\n  const enrichedErrors = errors.map((error) => enrichError(error, debug));\n  const makePrintable = (error: GraphQLFormattedError) => {\n    if (error instanceof Error) {\n      // Error defines its `message` and other fields as non-enumerable, meaning JSON.stringify does not print them.\n      const graphQLError = error as GraphQLFormattedError;\n      return {\n        message: graphQLError.message,\n        ...(graphQLError.locations && { locations: graphQLError.locations }),\n        ...(graphQLError.path && { path: graphQLError.path }),\n        ...(graphQLError.extensions && { extensions: graphQLError.extensions }),\n      };\n    }\n    return error;\n  };\n\n  if (!formatter) {\n    return enrichedErrors;\n  }\n\n  return enrichedErrors.map((error) => {\n    try {\n      return makePrintable(formatter(error));\n    } catch (err) {\n      if (debug) {\n        // XXX: This cast is pretty sketchy, as other error types can be thrown!\n        return enrichError(err as Partial<GraphQLError>, debug);\n      } else {\n        // obscure error\n        const newError = fromGraphQLError(\n          new GraphQLError('Internal server error'),\n        );\n        return enrichError(newError, debug);\n      }\n    }\n  }) as Array<ApolloError>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}