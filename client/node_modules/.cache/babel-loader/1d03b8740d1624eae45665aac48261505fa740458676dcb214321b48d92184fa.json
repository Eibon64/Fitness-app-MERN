{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDefaultRules = exports.checkValidationErrors = exports.validateGraphQlDocuments = void 0;\nconst graphql_1 = require(\"graphql\");\nconst AggregateError_js_1 = require(\"./AggregateError.js\");\nasync function validateGraphQlDocuments(schema, documentFiles) {\n  let effectiveRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : createDefaultRules();\n  const allFragmentMap = new Map();\n  const documentFileObjectsToValidate = [];\n  for (const documentFile of documentFiles) {\n    if (documentFile.document) {\n      const definitionsToValidate = [];\n      for (const definitionNode of documentFile.document.definitions) {\n        if (definitionNode.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n          allFragmentMap.set(definitionNode.name.value, definitionNode);\n        } else {\n          definitionsToValidate.push(definitionNode);\n        }\n      }\n      documentFileObjectsToValidate.push({\n        location: documentFile.location,\n        document: {\n          kind: graphql_1.Kind.DOCUMENT,\n          definitions: definitionsToValidate\n        }\n      });\n    }\n  }\n  const allErrors = [];\n  const allFragmentsDocument = {\n    kind: graphql_1.Kind.DOCUMENT,\n    definitions: [...allFragmentMap.values()]\n  };\n  await Promise.all(documentFileObjectsToValidate.map(async documentFile => {\n    const documentToValidate = (0, graphql_1.concatAST)([allFragmentsDocument, documentFile.document]);\n    const errors = (0, graphql_1.validate)(schema, documentToValidate, effectiveRules);\n    if (errors.length > 0) {\n      allErrors.push({\n        filePath: documentFile.location,\n        errors\n      });\n    }\n  }));\n  return allErrors;\n}\nexports.validateGraphQlDocuments = validateGraphQlDocuments;\nfunction checkValidationErrors(loadDocumentErrors) {\n  if (loadDocumentErrors.length > 0) {\n    const errors = [];\n    for (const loadDocumentError of loadDocumentErrors) {\n      for (const graphQLError of loadDocumentError.errors) {\n        const error = new Error();\n        error.name = 'GraphQLDocumentError';\n        error.message = `${error.name}: ${graphQLError.message}`;\n        error.stack = error.message;\n        if (graphQLError.locations) {\n          for (const location of graphQLError.locations) {\n            error.stack += `\\n    at ${loadDocumentError.filePath}:${location.line}:${location.column}`;\n          }\n        }\n        errors.push(error);\n      }\n    }\n    throw new AggregateError_js_1.AggregateError(errors, `GraphQL Document Validation failed with ${errors.length} errors;\n  ${errors.map((error, index) => `Error ${index}: ${error.stack}`).join('\\n\\n')}`);\n  }\n}\nexports.checkValidationErrors = checkValidationErrors;\nfunction createDefaultRules() {\n  let ignored = ['NoUnusedFragmentsRule', 'NoUnusedVariablesRule', 'KnownDirectivesRule'];\n  if (graphql_1.versionInfo.major < 15) {\n    ignored = ignored.map(rule => rule.replace(/Rule$/, ''));\n  }\n  return graphql_1.specifiedRules.filter(f => !ignored.includes(f.name));\n}\nexports.createDefaultRules = createDefaultRules;","map":{"version":3,"names":["Object","defineProperty","exports","value","createDefaultRules","checkValidationErrors","validateGraphQlDocuments","graphql_1","require","AggregateError_js_1","schema","documentFiles","effectiveRules","arguments","length","undefined","allFragmentMap","Map","documentFileObjectsToValidate","documentFile","document","definitionsToValidate","definitionNode","definitions","kind","Kind","FRAGMENT_DEFINITION","set","name","push","location","DOCUMENT","allErrors","allFragmentsDocument","values","Promise","all","map","documentToValidate","concatAST","errors","validate","filePath","loadDocumentErrors","loadDocumentError","graphQLError","error","Error","message","stack","locations","line","column","AggregateError","index","join","ignored","versionInfo","major","rule","replace","specifiedRules","filter","f","includes"],"sources":["/Users/chadward/node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/cjs/validate-documents.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDefaultRules = exports.checkValidationErrors = exports.validateGraphQlDocuments = void 0;\nconst graphql_1 = require(\"graphql\");\nconst AggregateError_js_1 = require(\"./AggregateError.js\");\nasync function validateGraphQlDocuments(schema, documentFiles, effectiveRules = createDefaultRules()) {\n    const allFragmentMap = new Map();\n    const documentFileObjectsToValidate = [];\n    for (const documentFile of documentFiles) {\n        if (documentFile.document) {\n            const definitionsToValidate = [];\n            for (const definitionNode of documentFile.document.definitions) {\n                if (definitionNode.kind === graphql_1.Kind.FRAGMENT_DEFINITION) {\n                    allFragmentMap.set(definitionNode.name.value, definitionNode);\n                }\n                else {\n                    definitionsToValidate.push(definitionNode);\n                }\n            }\n            documentFileObjectsToValidate.push({\n                location: documentFile.location,\n                document: {\n                    kind: graphql_1.Kind.DOCUMENT,\n                    definitions: definitionsToValidate,\n                },\n            });\n        }\n    }\n    const allErrors = [];\n    const allFragmentsDocument = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: [...allFragmentMap.values()],\n    };\n    await Promise.all(documentFileObjectsToValidate.map(async (documentFile) => {\n        const documentToValidate = (0, graphql_1.concatAST)([allFragmentsDocument, documentFile.document]);\n        const errors = (0, graphql_1.validate)(schema, documentToValidate, effectiveRules);\n        if (errors.length > 0) {\n            allErrors.push({\n                filePath: documentFile.location,\n                errors,\n            });\n        }\n    }));\n    return allErrors;\n}\nexports.validateGraphQlDocuments = validateGraphQlDocuments;\nfunction checkValidationErrors(loadDocumentErrors) {\n    if (loadDocumentErrors.length > 0) {\n        const errors = [];\n        for (const loadDocumentError of loadDocumentErrors) {\n            for (const graphQLError of loadDocumentError.errors) {\n                const error = new Error();\n                error.name = 'GraphQLDocumentError';\n                error.message = `${error.name}: ${graphQLError.message}`;\n                error.stack = error.message;\n                if (graphQLError.locations) {\n                    for (const location of graphQLError.locations) {\n                        error.stack += `\\n    at ${loadDocumentError.filePath}:${location.line}:${location.column}`;\n                    }\n                }\n                errors.push(error);\n            }\n        }\n        throw new AggregateError_js_1.AggregateError(errors, `GraphQL Document Validation failed with ${errors.length} errors;\n  ${errors.map((error, index) => `Error ${index}: ${error.stack}`).join('\\n\\n')}`);\n    }\n}\nexports.checkValidationErrors = checkValidationErrors;\nfunction createDefaultRules() {\n    let ignored = ['NoUnusedFragmentsRule', 'NoUnusedVariablesRule', 'KnownDirectivesRule'];\n    if (graphql_1.versionInfo.major < 15) {\n        ignored = ignored.map(rule => rule.replace(/Rule$/, ''));\n    }\n    return graphql_1.specifiedRules.filter((f) => !ignored.includes(f.name));\n}\nexports.createDefaultRules = createDefaultRules;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}