{"ast":null,"code":"var _jsxFileName = \"/Users/chadward/bootcamp/Fitness-app-MERN/client/src/components/WeeklyStatsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_WEEKLY_STATS = gql`\n  query GetWeeklyStats {\n    weeklyStats {\n      weekStartDate\n      exerciseCounts {\n        exerciseType\n        count\n      }\n      totalExerciseTime\n    }\n  }\n`;\nconst WeeklyStatsPage = () => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_WEEKLY_STATS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error occurred while fetching weekly stats\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);\n  const {\n    weekStartDate,\n    exerciseCounts,\n    totalExerciseTime\n  } = data.weeklyStats;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Week Start Date: \", weekStartDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Exercise Counts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exercise Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: exerciseCounts.map(_ref => {\n          let {\n            exerciseType,\n            count\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exerciseType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, exerciseType, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Exercise Time: \", totalExerciseTime, \" minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyStatsPage, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = WeeklyStatsPage;\nexport default WeeklyStatsPage;\nvar _c;\n$RefreshReg$(_c, \"WeeklyStatsPage\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","GET_WEEKLY_STATS","WeeklyStatsPage","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","weekStartDate","exerciseCounts","totalExerciseTime","weeklyStats","map","_ref","exerciseType","count","_c","$RefreshReg$"],"sources":["/Users/chadward/bootcamp/Fitness-app-MERN/client/src/components/WeeklyStatsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from '@apollo/client';\n\nconst GET_WEEKLY_STATS = gql`\n  query GetWeeklyStats {\n    weeklyStats {\n      weekStartDate\n      exerciseCounts {\n        exerciseType\n        count\n      }\n      totalExerciseTime\n    }\n  }\n`;\n\nconst WeeklyStatsPage = () => {\n  const { loading, error, data } = useQuery(GET_WEEKLY_STATS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error occurred while fetching weekly stats</p>;\n\n  const { weekStartDate, exerciseCounts, totalExerciseTime } = data.weeklyStats;\n\n  return (\n    <div>\n      <h2>Weekly Stats</h2>\n      <p>Week Start Date: {weekStartDate}</p>\n\n      <h3>Exercise Counts</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Exercise Type</th>\n            <th>Count</th>\n          </tr>\n        </thead>\n        <tbody>\n          {exerciseCounts.map(({ exerciseType, count }) => (\n            <tr key={exerciseType}>\n              <td>{exerciseType}</td>\n              <td>{count}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <p>Total Exercise Time: {totalExerciseTime} minutes</p>\n    </div>\n  );\n};\n\nexport default WeeklyStatsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}